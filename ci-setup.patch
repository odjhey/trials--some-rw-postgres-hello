diff --git a/Dockerfile-api b/Dockerfile-api
new file mode 100644
index 0000000..ceb8ae4
--- /dev/null
+++ b/Dockerfile-api
@@ -0,0 +1,23 @@
+FROM node:14-alpine
+
+WORKDIR /app
+
+COPY api api
+COPY package.json .
+COPY redwood.toml .
+COPY yarn.lock .
+COPY .yarn .yarn
+COPY .yarnrc.yml .yarnrc.yml
+
+RUN yarn install
+# should add this due to pre-render
+RUN yarn add react react-dom
+RUN yarn rw build api
+RUN rm -rf ./api/src
+
+WORKDIR /app/api
+
+EXPOSE 8911
+
+# this is the way, the truth and the life
+ENTRYPOINT ["/bin/sh","-c", "yarn rw prisma migrate deploy; yarn rw serve api --port 8911"]
diff --git a/Dockerfile-web b/Dockerfile-web
new file mode 100644
index 0000000..ee64f91
--- /dev/null
+++ b/Dockerfile-web
@@ -0,0 +1,52 @@
+FROM node:14-alpine as base
+WORKDIR /app
+
+ARG NODE_ENV
+ENV NODE_ENV=$NODE_ENV
+ARG RUNTIME_ENV
+ENV RUNTIME_ENV=$RUNTIME_ENV
+
+ARG WEB_API_URL
+ENV WEB_API_URL=$WEB_API_URL
+
+# Copy
+COPY api/package.json api/package.json
+COPY web/package.json web/package.json
+COPY package.json .
+COPY yarn.lock .
+COPY redwood.toml .
+COPY graphql.config.js .
+COPY .env.defaults .
+COPY .yarn .yarn
+COPY .yarnrc.yml .
+
+# Install dependencies
+RUN yarn install
+
+###########################################################################################
+# Build
+###########################################################################################
+
+FROM base as build
+
+# Copy
+COPY api api
+COPY web web
+
+# Build
+RUN yarn rw build web
+
+###########################################################################################
+# Runner
+###########################################################################################
+
+FROM nginx
+
+# Copy dist
+COPY --from=build /app/web/dist /app/web/dist
+COPY web-nginx.conf /etc/nginx/conf.d/default.conf
+
+EXPOSE 8910
+
+# Manually adding CMD instruction (from upstream) to bring in for analyzing
+CMD ["/usr/sbin/nginx", "-g", "daemon off;"]
diff --git a/hooks/build b/hooks/build
new file mode 100644
index 0000000..2f9018b
--- /dev/null
+++ b/hooks/build
@@ -0,0 +1,3 @@
+#!/bin/bash
+
+docker build --build-arg WEB_API_URL=$WEB_API_URL -f $DOCKERFILE_PATH -t $IMAGE_NAME .
diff --git a/redwood.toml b/redwood.toml
index 11270a2..e5406c7 100644
--- a/redwood.toml
+++ b/redwood.toml
@@ -8,9 +8,9 @@
 [web]
   title = "Redwood App"
   port = 8910
-  apiUrl = "/.redwood/functions" # you can customise graphql and dbauth urls individually too: see https://redwoodjs.com/docs/app-configuration-redwood-toml#api-paths
+  apiUrl = "${WEB_API_URL:/.redwood/functions}"
   includeEnvironmentVariables = [] # any ENV vars that should be available to the web side, see https://redwoodjs.com/docs/environment-variables#web
 [api]
   port = 8911
 [browser]
-  open = true
+  open = false
diff --git a/web-nginx.conf b/web-nginx.conf
new file mode 100644
index 0000000..318b66c
--- /dev/null
+++ b/web-nginx.conf
@@ -0,0 +1,36 @@
+server {
+    listen 8910 default_server;
+    root /app/web/dist;
+
+    # Add global header
+    add_header X-Awesomeness 9000;
+
+    # Cache css and js
+    location ~* \.(?:css|js)$ {
+        expires 7d;
+        add_header Pragma public;
+        add_header Cache-Control "public";
+        access_log off;
+    }
+
+    # Cache static
+    location ~* \.(?:jpg|jpeg|gif|png|webp|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
+        expires 1d;
+        add_header Pragma public;
+        add_header Cache-Control "public";
+        access_log off;
+    }
+
+    # Cache fonts
+    location ~* \.(?:woff|woff2|ttf|otf|eot)$ {
+        expires 30d;
+        add_header Pragma public;
+        add_header Cache-Control "public";
+        access_log off;
+    }
+
+    location / {
+        expires -1;
+        try_files $uri $uri/ /index.html;
+    }
+}
